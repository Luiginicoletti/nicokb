/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <10 9>;
        };

        deck {
            bindings = <&lt 5 C_AC_DESKTOP_SHOW_ALL_APPLICATIONS>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q             &kp W           &kp E         &kp R             &kp T      &kp Y        &kp U              &kp I            &kp O            &kp P                  &trans
&trans  &mt LEFT_GUI A    &mt LEFT_ALT S  &mt LCTRL D   &mt LEFT_SHIFT F  &kp G      &kp H        &mt RIGHT_SHIFT J  &mt RCTRL K      &mt RIGHT_ALT L  &mt RIGHT_GUI SEMI     &trans
&trans  &mt LEFT_SHIFT Z  &kp X           &kp C         &kp V             &kp B      &kp N        &kp M              &kp COMMA        &kp DOT          &mt RIGHT_SHIFT SLASH  &trans
                                          &lt 1 ESCAPE  &lt 2 SPACE       &kp TAB    &lt 5 ENTER  &lt 3 SPACE        &lt 4 BACKSPACE
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans          &trans  &trans  &trans  &trans    &kp N7  &kp N8  &kp N9  &kp MINUS         &kp EQUAL        &trans
&trans  &trans          &trans  &trans  &trans  &trans    &kp N4  &kp N5  &kp N6  &kp MINUS         &kp BACKSLASH    &trans
&trans  &kp LEFT_SHIFT  &trans  &trans  &trans  &trans    &kp N1  &kp N2  &kp N3  &kp SINGLE_QUOTE  &kp RIGHT_SHIFT  &trans
                                &trans  &trans  &trans    &trans  &kp N0  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL          &kp AT       &kp HASH      &kp DLLR      &kp PRCNT    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BSPC
&kp LCTRL  &kp C_PLAY_PAUSE  &kp C_PAUSE  &kp C_VOL_DN  &kp C_VOL_UP  &trans       &kp N4     &kp N5         &kp N6        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE
&kp LSHFT  &trans            &trans       &kp C_MUTE    &trans        &trans       &kp N1     &kp N2         &kp N3        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp TILDE
                                          &kp LGUI      &trans        &kp SPACE    &kp RET    &kp N0         &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp NUMBER_1      &kp N2          &kp N3             &kp N4           &kp N5            &kp N6           &kp N7             &kp N8      &kp N9     &kp N0            &kp BSPC
&kp LC(A)  &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT         &bt BT_SEL 3     &bt BT_SEL 4      &kp LEFT         &kp DOWN           &kp UP      &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LCTRL  &trans            &trans          &trans             &trans           &trans            &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp C_MUTE  &trans     &trans            &trans
                                             &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp LEFT_SHIFT    &kp RET          &trans             &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp F1        &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9   &kp F10  &trans
&trans  &mmv MOVE_UP  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &kp F11  &kp F12  &trans
&trans  &trans        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
                              &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        MULT {
            bindings = <
&trans  &trans            &trans          &kp RG(LS(NUMBER_4))  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT            &kp C_VOLUME_UP       &kp C_MUTE              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans            &trans          &trans                &kp C_VOLUME_DOWN     &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans                &trans                &trans                  &trans  &trans  &trans
            >;
        };
    };
};
